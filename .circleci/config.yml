version: 2.1

aliases:
  - &workspace_root ~/workspace

  - &attach_workspace
    at: *workspace_root

  - &persist_to_workspace
    root: .
    paths:
      - .

  - &save_js_packages
    key: js-packages-v1-{{ .Branch }}-{{ checksum "/root/project/package-lock.json" }}
    paths:
      - /root/.npm

  - &restore_js_packages
    keys:
      - js-packages-v1-{{ .Branch }}-{{ checksum "/root/project/package-lock.json" }}
      - js-packages-v1-{{ .Branch }}-
      - js-packages-v1-

jobs:
  checkout_and_build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout

      - run: |
          npm ci --unsafe-perm

      - persist_to_workspace: *persist_to_workspace

  prettier:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:lts
    steps:
      - attach_workspace: *attach_workspace
      - run: npm run prettier:check

  lint:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:lts
    steps:
      - attach_workspace: *attach_workspace
      - run: npm run lint

  publishPatch:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:lts
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - 'd0:a7:2b:68:d0:77:5f:25:cc:39:40:7f:c7:75:9c:29'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: ./node_modules/.bin/lerna publish patch --no-verify-access --yes

  publishMinor:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:lts
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - 'd0:a7:2b:68:d0:77:5f:25:cc:39:40:7f:c7:75:9c:29'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: ./node_modules/.bin/lerna publish minor --no-verify-access --force-publish --yes

  publishMajor:
    working_directory: *workspace_root
    docker:
      - image: circleci/node:lts
    steps:
      - attach_workspace: *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - 'd0:a7:2b:68:d0:77:5f:25:cc:39:40:7f:c7:75:9c:29'
      - run: git config user.email "circleci@t3n.de"
      - run: git config user.name "CircleCI Bot"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: npm version major && npm publish
      - run: ./node_modules/.bin/lerna publish major --no-verify-access --force-publish --yes

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_build:
          filters:
            tags:
              ignore: /.*/
      - prettier:
          requires:
            - checkout_and_build
      - lint:
          requires:
            - checkout_and_build

      - publishPatchApproval:
          type: approval
          requires:
            - prettier
            - lint
          filters:
            branches:
              only:
                - master

      - publishPatch:
          filters:
            branches:
              only:
                - master
          requires:
            - publishPatchApproval

      - publishMinorApproval:
          type: approval
          requires:
            - prettier
            - lint
          filters:
            branches:
              only:
                - master

      - publishMinor:
          filters:
            branches:
              only:
                - master
          requires:
            - publishMinorApproval

      - publishMajorApproval:
          type: approval
          requires:
            - prettier
            - lint
          filters:
            branches:
              only:
                - master

      - publishMajor:
          filters:
            branches:
              only:
                - master
          requires:
            - publishMajorApproval
